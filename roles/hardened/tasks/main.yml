---
# tasks file for hardened
- name: copy /etc/sysctl.d/hardened.conf
  copy: src=etc/sysctl.d/hardened.conf dest=/etc/sysctl.d/hardened.conf owner=root group=root mode=0644
  notify: apply sysctl
- name: copy /etc/modprobe.d/hardened.conf
  template: src=etc/modprobe.d/hardened.conf dest=/etc/modprobe.d/hardened.conf owner=root group=root mode=0644
# inutile de garde le suid/guid
- name: remove suid and guid bits unneeded
  file: dest={{ item }} mode="u-s,g-s"
  with_items:
    - /usr/bin/chfn
    - /usr/bin/chsh
    - /usr/bin/chage
    - /usr/bin/expiry
    - /usr/bin/gpasswd
    - /usr/bin/ksu
    - /usr/bin/write
    - /usr/bin/sg
    - /usr/bin/wall
    - /usr/bin/write
    - /usr/lib/ssh/ssh-keysign
#- service: name=org.cups.cupsd state=stopped enabled=no
- name: disable LLMR
  ini_file: dest=/etc/systemd/resolved.conf section=Resolve option=LLMNR value=no
  notify: restart systemd-resolved
- name: create tmp mount override directory
  file: dest=/etc/systemd/system/tmp.mount.d state=directory owner=root group=systemd-network mode=0640
- name: set tmp mount options
  template: src=etc/systemd/system/tmp.mount.d/customdependency.conf dest=/etc/systemd/system/tmp.mount.d/customdependency.conf owner=root group=systemd-network mode=0640
  register: systemctlReload
- name: do systemctlreload
  command: systemctl daemon-reload
  when: systemctlReload|changed
- name: restrict acces to some directories
  file: state=directory path={{ item }} owner=root group=root mode=0700
  with_items:
    #- /boot
    - /etc/iptables
    - /etc/cron.hourly
    - /etc/cron.daily
    - /etc/cron.weekly
    - /etc/cron.monthly
    - /etc/cron.d
- name: restrict cron
  file: dest={{ item }} state=absent
  with_items:
    - /etc/cron.deny
    - /etc/at.deny
- name: restrict access to some files
  copy: content="" dest={{ item }} owner=root group=root mode=0600 force=no
  with_items:
    - /etc/crontab
    - /etc/cron.allow
    - /etc/at.allow
    - /etc/ssh/sshd_config
- name: remove localhost ipv6 entry
  lineinfile:
    dest: /etc/hosts
    regexp: '::1'
    line: '#::1		localhost.localdomain	localhost'
- name: Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems
  lineinfile: dest={{ item }} regexp="pam_tally" line="auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900"
  with_items:
    - /etc/pam.d/system-auth
- name: Ensure password reuse is limited
  lineinfile: dest=/etc/pam.d/system-auth line="password sufficient pam_unix.so remember=5"
- name: Ensure password hashing algorithm is SHA-512
  lineinfile: dest=/etc/pam.d/system-auth line="password sufficient pam_unix.so sha512"
- name: Ensure access to the su command is restricted
  lineinfile: dest=/etc/securetty line="auth required pam_wheel.so use_uid"

