---
# tasks file for fail2ban
- name: install fail2ban
  pacman: name=fail2ban state=present
- name: install whois
  pacman: name=whois state=present
- name: create systemd hook fail2ban.service.d for fail2ban
  file: path=/etc/systemd/system/fail2ban.service.d/ state=directory owner=root group=root mode=0640
- name: create systemd hook file for fail2ban
  template: src=etc/systemd/system/fail2ban.service.d/capabilities.conf dest=/etc/systemd/system/fail2ban.service.d/capabilities.conf owner=root group=root mode=0640
  register: systemctlReload
- name: reload systemctl
  command: systemctl daemon-reload
  when: systemctlReload | changed
- name: set journal to journalctl
  lineinfile: dest=/etc/fail2ban/fail2ban.conf regexp="^logtarget" line="logtarget = SYSLOG"
  notify: reload fail2ban
- name: set dbpurgeage option
  lineinfile: dest=/etc/fail2ban/fail2ban.conf regexp="^dbpurgeage" line="dbpurgeage = 864000"
  notify: reload fail2ban
- name: configure jails
  template: src=etc/fail2ban/jail.local dest=/etc/fail2ban/jail.local owner=root group=root mode=0640
  notify: reload fail2ban
- name: create fail2ban filters
  template: src=etc/fail2ban/filter.d/filter.conf dest=/etc/fail2ban/filter.d/{{item.name}}.conf
  with_items:
    - {name: nginx-forbiden, failregex: "^<HOST> \\- \\S+ \\[\\] \\\".*\\\" 403 \\d+ .+$", ignoreregex: ''}
    - {name: nginx-matchall, failregex: '^<HOST>', ignoreregex: ''}
    - {name: nginx-naxsi, failregex: 'NAXSI_FMT: ip=<HOST>&server', ignoreregex: ''}
    - {name: nginx-sslerror, failregex: '^<HOST> \- \S+ \[\] \".*\" 400 \d+ .+$', ignoreregex: ''}
    - {name: owncloud, failregex: "{\"reqId\":\".*\",\"remoteAddr\":\"<HOST>\",\"app\":\"core\",\"message\":\"Login failed: \'.*", ignoreregex: ''}
  notify: reload fail2ban
- name: create default jails
  template: src=etc/fail2ban/jail.d/jail.conf dest=/etc/fail2ban/jail.d/{{item.name}}.conf
  with_items:
    - {name: nginx-sslerror, logpath: '/var/log/nginx/*.access.log', findtime: "{{fail2banFindTime}}", bantime: "{{fail2banBanTime}}", port: 443}
    - {name: nginx-forbiden, logpath: '/var/log/nginx/*.access.log', findtime: "{{fail2banFindTime}}", bantime: "{{fail2banBanTime}}", port: 443}
    - {name: nginx-naxsi, logpath: '/var/log/nginx/*.error.log', findtime: "{{fail2banFindTime}}", bantime: "{{fail2banBanTime}}", port: 443}
    - {name: nginx-matchall, logpath: '/var/log/nginx/default.access.log', findtime: "{{fail2banFindTime}}", bantime: "{{honeyPotBanTime}}", port: 443}
    - {name: owncloud, logpath: "{{ownCloudDDataDir}}/owncloud.log", findtime: "{{fail2banFindTime}}", bantime: "{{fail2banBanTime}}", port: 443}
    - {name: owncloud-bf, filter: 'owncloud', logpath: "{{ownCloudDDataDir}}/owncloud.log", findtime: "{{fail2banFindTime}}", bantime: "{{fail2banBanTime}}", port: 443}
    - {name: sshd, findtime: "{{fail2banFindTime}}", backend: systemd, bantime: "{{fail2banBanTime}}", port: 22}
    - {name: sshd-ddos, findtime: "{{fail2banFindTime}}", backend: systemd, bantime: "{{fail2banBanTime}}", port: 22}
  notify: reload fail2ban
- name: test if /var/log/nginx/default.access.log exists
  stat: path=/var/log/nginx/default.access.log
  register: nginxDefaultAccesLog
- name: create default access.log for nginx if not exists
  copy: content="" dest=/var/log/nginx/default.access.log owner=root group=root mode=0640
  when: not nginxDefaultAccesLog.stat.exists
- name: test if /var/log/nginx/default.error.log exists
  stat: path=/var/log/nginx/default.error.log
  register: nginxDefaultErrorLog
- name: create default error.log for nginx if not exists
  copy: content="" dest=/var/log/nginx/default.error.log owner=root group=root mode=0640
  when: not nginxDefaultErrorLog.stat.exists
- name: test if "{{ownCloudDDataDir}}/owncloud.log" exists
  stat: path="{{ownCloudDDataDir}}/owncloud.log"
  register: ownCloudLog
- name: create "{{ownCloudDDataDir}}/owncloud.log" if not exists
  copy: content="" dest="{{ownCloudDDataDir}}/owncloud.log" owner=http group=http mode=0640
  when: not ownCloudLog.stat.exists
- name: Disable email notifications of jails stopping or starting
  template: src=etc/fail2ban/action.d/sendmail-common.local dest=/etc/fail2ban/action.d/sendmail-common.local owner=root group=root mode=0644
- name: ensure fail2ban is started and enabled
  service: name=fail2ban state=started enabled=yes
